# claim a deployment called api-app.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-app
  labels:
    app: api-app
spec:
  replicas: 1
  template:
    metadata:
      name: api-app
      labels:
        app: api-app
    spec:
      containers:
        - name: api-app
          image: a-fake-container-registry.com/api-app:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 50Mi
              memory: 200Mi
            limits:
              cpu: 1000Mi
              memory: 1000Mi
          volumeMounts:
            - mountPath: /data
              name:  data
            - mountPath: /config
              name: config
      restartPolicy: Always
      imagePullSecrets:
        - name: api-secret
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: api-data
        - name: config
          configMap:
            name: api-cm
            items:
              - key: config.yaml
                path: config.yaml
  selector:
    matchLabels:
      app: api-app
---
# pvc for api-app
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: api-data
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fake-pv
  volumeMode: Filesystem
  resources:
    requests:
      storage: 20Gi
---
# defination of pv
apiVersion: v1
kind: PersistentVolume
metadata:
  name: api-volume
spec:
  storageClassName: fake-pv
  capacity:
    storage: 100Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
---
# claim a svc for api-app.
apiVersion: v1
kind: Service
metadata:
  name: api-app
spec:
  selector:
    app: api-app
  ports:
    - port: 8080
  type: ClusterIP
---
# claim a hpa for api-app.
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: my-app-hpa
  namespace: fly
spec:
  minReplicas: 1
  maxReplicas: 5
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-app
  targetCPUUtilizationPercentage: 70
---
# docker config json secret for pulling api-app image
apiVersion: v1
kind: Secret
metadata:
  name: api-secret
data:
  .dockerconfigjson: >-
    docker_config_encoded_by_base64
type: kubernetes.io/dockerconfigjson
---
# fake config map for api-app.
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-cm
data:
  config.yaml: |
    config_data