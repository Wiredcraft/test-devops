#!/bin/sh
# chkconfig: 2345 20 80

export LANG="en_US.UTF-8"
export workPATH={{ iteration_path }}
export workPID=$workPath/run.pid
export workName={{ iteration_script }}

  # Change directory to prevent path problems
  cd "$workPATH"

start() {
  isrunning

  if [ "$?" = 0 ]; then
    echo $workName" already running"
    return 0
  fi

  # Remove pidfile if still around
  test -f $workPID && rm -f $workPID

  nohup python {{ iteration_script }} iteration > iteration.log 2>&1 & echo $! > run.pid
}

stop() {
  isrunning

  if [ "$?" = 1 ]; then
    echo $workName" already stopped"
    rm -f $workPID # remove pidfile if still around
    return 0
  fi

  echo  "Waiting for "$workName" to exit ."

   /bin/kill $pid && sleep 2
   findpid

  # check if service is still running, this will be our exit status
  ! isrunning
}

findpid() {
  pid=""
  pid=$(pgrep -f $workName)

  # validate output of pgrep
  if ! [ "$pid" = "" ] && ! [ "$pid" -gt 0 ]; then
    echo "Unable to determine if "$workName" is running"
    exit 1
  fi
}

isrunning() {
  findpid

  if [ "$pid" = "" ]; then
    return 1
  elif [ "$pid" -gt 0 ]; then
    return 0
  fi
}

case "$1" in
  start)
    start
    sleep 3
    isrunning
    RETVAL=$?

    if [ "$RETVAL" = 0 ]; then
      echo "Started "$workName
    else
      echo "Not able to start "$workName
    fi
    ;;

  stop)
    stop
    RETVAL=$?

    if [ "$RETVAL" = 0 ]; then
      echo  "Stopped "$workName
    else
      echo "Not able to stop "$workName
    fi
  ;;

  restart)
    stop
    sleep 5
    start
    RETVAL=$?

    if [ "$RETVAL" = 0 ]; then
      echo "Restarted "$workName
    else
      echo "Not able to restart "$workName
    fi
  ;;

  status)
    isrunning
    RETVAL=$?

    if [ "$RETVAL" = 0 ]; then
      echo $workName" (pid $pid) is running..."
    else
      echo $workName" is stopped"
      RETVAL=3
    fi
  ;;

  *)
    echo "Usage: $0 {start|stop|restart|status}."
  ;;

esac

exit $RETVAL
